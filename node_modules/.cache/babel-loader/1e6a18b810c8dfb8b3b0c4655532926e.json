{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React, { createRef, useCallback, useEffect } from 'react';\nimport withForwardedRef from 'react-with-forwarded-ref';\nexport var getHeight = function (rows, el) {\n  var _a = window.getComputedStyle(el),\n      borderBottomWidth = _a.borderBottomWidth,\n      borderTopWidth = _a.borderTopWidth,\n      fontSize = _a.fontSize,\n      lineHeight = _a.lineHeight,\n      paddingBottom = _a.paddingBottom,\n      paddingTop = _a.paddingTop;\n\n  var lh = lineHeight === 'normal' ? parseFloat(fontSize) * 1.2 : parseFloat(lineHeight);\n  var rowHeight = rows === 0 ? 0 : lh * rows + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth) + parseFloat(paddingBottom) + parseFloat(paddingTop);\n  var scrollHeight = el.scrollHeight + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth);\n  return Math.max(rowHeight, scrollHeight);\n};\nexport var resize = function (rows, el) {\n  if (el) {\n    var overflowY = 'hidden';\n    var maxHeight = window.getComputedStyle(el).maxHeight;\n\n    if (maxHeight !== 'none') {\n      var maxHeightN = parseFloat(maxHeight);\n\n      if (maxHeightN < el.scrollHeight) {\n        overflowY = '';\n      }\n    }\n\n    el.style.height = '0';\n    el.style.overflowY = overflowY;\n    el.style.height = getHeight(rows, el) + \"px\";\n  }\n};\n\nvar ExpandingTextarea = function (_a) {\n  var forwardedRef = _a.forwardedRef,\n      props = __rest(_a, [\"forwardedRef\"]);\n\n  var ref = forwardedRef || createRef();\n  var rows = props.rows ? parseInt('' + props.rows, 10) : 0;\n  var onChange = props.onChange,\n      onInput = props.onInput;\n  useEffect(function () {\n    resize(rows, ref.current);\n  }, [ref, rows]);\n  var handleInput = useCallback(function (e) {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onInput) {\n      onInput(e);\n    }\n\n    resize(rows, ref.current);\n  }, [onChange, onInput, ref, rows]);\n  return React.createElement(\"textarea\", __assign({}, props, {\n    onInput: handleInput,\n    ref: forwardedRef || ref,\n    rows: rows\n  }));\n};\n\nexport default withForwardedRef(ExpandingTextarea);","map":{"version":3,"sources":["/Library/WebServer/Documents/sandbox/greeting/node_modules/react-expanding-textarea/dist/esm/index.js"],"names":["__assign","__rest","React","createRef","useCallback","useEffect","withForwardedRef","getHeight","rows","el","_a","window","getComputedStyle","borderBottomWidth","borderTopWidth","fontSize","lineHeight","paddingBottom","paddingTop","lh","parseFloat","rowHeight","scrollHeight","Math","max","resize","overflowY","maxHeight","maxHeightN","style","height","ExpandingTextarea","forwardedRef","props","ref","parseInt","onChange","onInput","current","handleInput","e","createElement"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React, { createRef, useCallback, useEffect, } from 'react';\nimport withForwardedRef from 'react-with-forwarded-ref';\nexport var getHeight = function (rows, el) {\n    var _a = window.getComputedStyle(el), borderBottomWidth = _a.borderBottomWidth, borderTopWidth = _a.borderTopWidth, fontSize = _a.fontSize, lineHeight = _a.lineHeight, paddingBottom = _a.paddingBottom, paddingTop = _a.paddingTop;\n    var lh = lineHeight === 'normal'\n        ? parseFloat(fontSize) * 1.2\n        : parseFloat(lineHeight);\n    var rowHeight = rows === 0\n        ? 0\n        : lh * rows +\n            parseFloat(borderBottomWidth) +\n            parseFloat(borderTopWidth) +\n            parseFloat(paddingBottom) +\n            parseFloat(paddingTop);\n    var scrollHeight = el.scrollHeight + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth);\n    return Math.max(rowHeight, scrollHeight);\n};\nexport var resize = function (rows, el) {\n    if (el) {\n        var overflowY = 'hidden';\n        var maxHeight = window.getComputedStyle(el).maxHeight;\n        if (maxHeight !== 'none') {\n            var maxHeightN = parseFloat(maxHeight);\n            if (maxHeightN < el.scrollHeight) {\n                overflowY = '';\n            }\n        }\n        el.style.height = '0';\n        el.style.overflowY = overflowY;\n        el.style.height = getHeight(rows, el) + \"px\";\n    }\n};\nvar ExpandingTextarea = function (_a) {\n    var forwardedRef = _a.forwardedRef, props = __rest(_a, [\"forwardedRef\"]);\n    var ref = forwardedRef || createRef();\n    var rows = props.rows ? parseInt('' + props.rows, 10) : 0;\n    var onChange = props.onChange, onInput = props.onInput;\n    useEffect(function () {\n        resize(rows, ref.current);\n    }, [ref, rows]);\n    var handleInput = useCallback(function (e) {\n        if (onChange) {\n            onChange(e);\n        }\n        if (onInput) {\n            onInput(e);\n        }\n        resize(rows, ref.current);\n    }, [onChange, onInput, ref, rows]);\n    return (React.createElement(\"textarea\", __assign({}, props, { onInput: handleInput, ref: forwardedRef || ref, rows: rows })));\n};\nexport default withForwardedRef(ExpandingTextarea);\n"]},"metadata":{},"sourceType":"module"}